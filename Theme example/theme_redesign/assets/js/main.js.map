{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"../scripts/main.js","sourcesContent":["(function($) {\n\n\t'use strict';\n\n\n\n    /*-------------------------------------------------------------------------------*/\n    /*\n     /*-------------------------------------------------------------------------------*/\n\n    Drupal.behaviors.Mobilemenu = {\n        attach: function (context, settings) {\n\n          $('.navbar-toggle').click(function (e) {\n            e.stopImmediatePropagation();\n            $(this).toggleClass('open');\n            $(this).parent().parent().parent().find('#mobile-menu').toggleClass('open');\n            $('body').toggleClass('mobile-overlay');\n          });\n\n        }\n    };\n\n  Drupal.behaviors.RadiobuttonPopup = {\n    attach: function (context, settings) {\n\n      $('input[type=\"radio\"]').click(function(){\n        var $radio = $(this);\n\n        // if this was previously checked\n        if ($radio.data('waschecked') == true) {\n          $radio.prop('checked', false);\n          $radio.data('waschecked', false);\n        } else\n          $radio.data('waschecked', true);\n\n        $radio.parent().toggleClass('checked');\n\n        // remove was checked from other radios\n        $radio.siblings('input[type=\"radio\"]').data('waschecked', false);\n      });\n\n      $('input[type=\"checkbox\"]').click(function(){\n        var $radio = $(this);\n\n        // if this was previously checked\n        if ($radio.data('waschecked') == true) {\n          $radio.prop('checked', false);\n          $radio.data('waschecked', false);\n        } else\n          $radio.data('waschecked', true);\n\n        $radio.parent().toggleClass('checked');\n\n        // remove was checked from other radios\n        $radio.siblings('input[type=\"radio\"]').data('waschecked', false);\n      });\n    }\n  };\n\n\n  Drupal.behaviors.ctaPopup = {\n    attach: function (context) {\n\n      // Trigger download popup on page load.\n      $('a.popup-element-title', context).once( function() {\n        $(this).addClass('clicked');\n\n        $($(this)[0]).click();\n\n        $('#popup-active-overlay').addClass('active');\n\n\n        setTimeout(function(){\n\n          if( $('#popup-active-overlay').find('.bean-download-block').length > 0) {\n            $('#popup-active-overlay').addClass('remove-bg-bean');\n          }\n\n          if($('#popup-active-overlay').find('.webform-client-form').length > 0 ) {\n\n            $('#popup-active-overlay').addClass('popup-form');\n          }\n\n          if($('#popup-active-overlay').hasClass('popup-form') ||$('#popup-active-overlay').hasClass('remove-bg-bean') ){\n\n          }else {\n            $('#popup-active-overlay .block').css('padding','30px');\n          }\n\n        }, 1550);\n\n      });\n\n\n\n      $('.popup-close').on('click',function () {\n\n        $('#popup-active-overlay').removeClass('active','remove-bg-bean');\n      });\n    }\n  };\n\n\n  Drupal.behaviors.tooltip= {\n    attach: function (context, settings) {\n      $('.study-area .field-name-field-course-icon img').attr(\"data-toggle\",\"tooltip\");\n      $('.field-name-course-centre-block-grid img').attr(\"data-toggle\",\"tooltip\");\n\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n  };\n\n  Drupal.behaviors.matchHeight= {\n    attach: function (context, settings) {\n\n\n        $('.paragraphs-item-2-3-1-3-grid .block .field-name-field-non-bold-text').matchHeight({ property: 'min-height' });\n\n      $('.paragraphs-item-2-3-1-3-grid .block').matchHeight({ property: 'min-height' });\n\n        $('.paragraphs-item-2-3-1-3 .block-left .block .field-name-field-non-bold-text').matchHeight({ property: 'min-height' });\n\n\n    }\n  };\n  // /* HEADER SEARCH */\n  // /* -- add in descriptive text to search box\n  // function headersearch(){\n  //   var searchbox = $(\"#id-form-text-input-element\");\n  //   var searchtext = \"Search\";\n  //   var submitbutton = $('#id-of-submit-form-button');\n  //\n  //   searchbox.attr(\"value\", searchtext);\n  //\n  //   searchbox.focus(function(){\n  //     if(jQuery.trim($(this).attr(\"value\")) == searchtext) $(this).attr(\"value\", \"\");\n  //   });\n  //\n  //   searchbox.blur(function(){\n  //     if(jQuery.trim($(this).attr(\"value\")) == \"\") $(this).attr(\"value\", searchtext);\n  //   });\n  //\n  //   submitbutton.click(function(){\n  //     if (searchbox.val() == searchtext) searchbox.attr(\"value\", \"\");\n  //   });\n  //\n  // }\n  // headersearch();\n  // */\n  // function popupShare(){\n  //   $(\"a.ssl\").click(function(){\n  //     //$(this).hide();\n  //     var url = $(this).attr('href');\n  //     var windowWidth = $(window).width();\n  //     var windowHeight = $(window).height();\n  //     var windowLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\n  //     var windowTop = window.screenTop != undefined ? window.screenTop : screen.top;\n  //     //var screenLeft = screen.left;\n  //     var width = 450;\n  //     var left = windowWidth / 2 - width / 2 + windowLeft;\n  //     var height = 300;\n  //     var top = windowHeight / 2 - height / 2 + windowTop;\n  //     window.open(url, \"popupWindow\", \"scrollbars=no,resizable=1,height=\" + height + \",width=\" + width + \",top=\" + top + \",left=\" + left);\n  //     return false;\n  //   });\n  // }\n  // popupShare();\n  //\n  // function addClassLastOfType(){\n  //   $('.node-qualification h3:last-of-type').addClass('last-child');\n  // } addClassLastOfType();\n  //\n  //\n  // function equalHeightOfTextField(class1, class2, noSpace){\n  //   //make the function work with argument so we can re-use it\n  //   // asign panel and elem variables\n  //   var panel = $(class1);\n  //   var elem = $(class2);\n  //   // for each panel function\n  //   panel.each(function(){\n  //     // make a new array to put our heights into\n  //     var heightArray = [];\n  //     var spaceArray = [];\n  //\n  //     //find each elem and assign it a variable so we can apply heights later\n  //     var column = $(this).find(elem);\n  //\n  //     // for every column we get, push it into our array\n  //     column.each(function(){\n  //       //get the height\n  //       var columnHeight = $(this).height();\n  //       //push height to array\n  //       heightArray.push(columnHeight);\n  //\n  //       var paddingTop = parseInt($(this).css('padding-top'), 10);\n  //       var paddingBottom = parseInt($(this).css('padding-bottom'), 10);\n  //       //get both top and bottom padding\n  //       var paddingVertical = paddingTop + paddingBottom;\n  //       //push vertical padding to array\n  //       spaceArray.push(paddingVertical);\n  //     });\n  //     //console.log(heightArray);\n  //     //console.log(spaceArray);\n  //     //console.log(columnHeight);\n  //\n  //     //eg would return [num,num,num]\n  //     //from the array find the largest number\n  //     var colHeight = Math.max.apply(Math, heightArray);\n  //     var colPaddingVertical = Math.max.apply(Math, spaceArray);\n  //     //console.log(colHeight);\n  //\n  //     //apply the largest height from the array to every column in the panel + spacing\n  //\n  //     if(noSpace == 'noSpace'){\n  //       column.css('min-height', colHeight);\n  //     } else {\n  //       column.css('min-height', colHeight + colPaddingVertical);\n  //     }\n  //   });\n  // }\n  //\n  // equalHeightOfTextField('.front .region-content-bottom', '.block-views', 'Space');\n  // equalHeightOfTextField('.front .region-content-top', '.block', 'noSpace');\n  // //equalHeightOfTextField('.view-course-icon-front-block', '.views-row', 'noSpace');\n  //\n  // function movingFilter(){\n  //   $('.region-content').before('<div id=\"content-top\"></div>');\n  //   $('#content-top').append('<div class=\"region-content-top\"></div>');\n  //\n  //   if(($(window).width()) < 991 ){\n  //\n  //     $(\".region-content-top\").append($(\"#block-block-filters-filters\"));\n  //   }\n  //\n  //   $(window).resize(function() {\n  //\n  //     var responsive_viewport = $(window).width();\n  //\n  //     //console.log(responsive_viewport);\n  //     var moving_div = $(\"#block-block-filters-filters\");\n  //     if (responsive_viewport > 991) {\n  //       moving_div.clone().remove();\n  //       //$(moving_div).prependTo(\".region-sidebar-second\");\n  //       $(\"#block-menu-block-3\").after(moving_div);\n  //     } else {\n  //       moving_div.clone().remove();\n  //       //$(moving_div).appendTo(\".region-content-top\");\n  //       $(\".region-content-top\").append(moving_div);\n  //     }\n  //   });\n  // }\n  // movingFilter();\n\n\n\n\n})(jQuery);\n\n"]}